<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tech on tanxiangyu&#39;s log</title>
    <link>https://tanxiangyuu.github.io/posts/tech/</link>
    <description>Recent content in tech on tanxiangyu&#39;s log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 16 Jul 2024 16:04:34 +0800</lastBuildDate>
    <atom:link href="https://tanxiangyuu.github.io/posts/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从 huggingface 下载文件到公共服务器</title>
      <link>https://tanxiangyuu.github.io/posts/tech/hf_download/</link>
      <pubDate>Tue, 16 Jul 2024 16:04:34 +0800</pubDate>
      <guid>https://tanxiangyuu.github.io/posts/tech/hf_download/</guid>
      <description>1. 怎么下载更快 因为内地特殊原因，从 hf 上下载模式或者数据集速度不堪入目。很多佬都发过提速方法，这里稍微总结一下。
来源：
苏洋博客
如何快速下载huggingface大模型
huggingface-cli命令下载。
1 huggingface-cli download microsoft/phi-2 但是非常不建议使用这个默认命令下载，会很慢，而且会下在根目录的缓存文件中，并且使用 git blob 来保存模型文件，会比原本模型更大。
可以在这个命令基础上，使用和指定一些参数来完成高效下载。 比如：
1 huggingface-cli download microsoft/phi-2 --local-dir=./models/ --cache-dir=./cache --local-dir-use-symlinks=False --resume-download --local-dir 和下载使用的缓存目录 --cache-dir都设置到了当前目录下，开启 --local-dir-use-symlinks=False 可以让下载的文件后续都以非软链文件保存，方便后续保存或者上传服务器。最后，添加--resume-download 可以确保始终接着之前的下载进度继续，如果下载进度有中断。
HF_TRANSFER使用
是 hugging face 官方专门为提高下载速度基于 Rust 开发的一个模块，开启后在带宽充足的机器上可以跑到 500MB/s。 但是有非常明显的缺点：
HF_TRANSFER不可断点重续!!!具体说明文档 太容易断了！ 启用方法：export HF_HUB_ENABLE_HF_TRANSFER=1
镜像网站使用
https://hf-mirror.com，设置
1 export HF_ENDPOINT=&amp;#34;https://hf-mirror.com&amp;#34; 使用摩搭社区下载
缺点：模型更新有延迟。
2. 折腾 hf 下载 使用huggingface-cli+HF_TRANSFER下载。
具体参数：
--repo-type：下载类型， &amp;lt;model or dataset name&amp;gt;：模型或者数据集名称， --local-dir：本地位置， --cache-dir：缓存位置， --local-dir-use-symlinks：是否使用软链接。 --resume-download：断点续传。 环境设置：
export HF_ENDPOINT=&amp;quot;https://hf-mirror.</description>
    </item>
    <item>
      <title>Frp</title>
      <link>https://tanxiangyuu.github.io/posts/tech/frp/</link>
      <pubDate>Sat, 13 Jul 2024 16:00:03 +0800</pubDate>
      <guid>https://tanxiangyuu.github.io/posts/tech/frp/</guid>
      <description>内网穿透介绍 互联网上两个不同的主机进行通信首先需要知道对方IP。根据IP协议，只有分配了公网IP的设备才能在互联网上通信和传输数据。而中国人口/设备众多，分配到的IPv4资源又少，因此绝大部分情况是通过路由器/交换机转换公网IP后才上网。 位于路由器/交换机后的设备一般是内网设备，分配的IP地址以 192.168/172.16/10.0 开头，属于内网IP。要让内网设备对外提供服务，就需要进行内网穿透。
frp介绍 frp 是一个开源、简洁易用、高性能的内网穿透和反向代理软件，支持 tcp, udp, http, https等协议。 frp 项目官网是 GitHub - fatedier/frp，中文官方文档地址：frp/README_zh.md。除了安装过程，中文文档对使用过程已经介绍的非常详细，如遇到问题，建议先查看官方文档。 frp工作原理为：
服务端运行，监听一个主端口，等待客户端的连接； 客户端连接到服务端的主端口，同时告诉服务端要监听的端口和转发类型； 服务端fork新的进程监听客户端指定的端口； 外网用户连接到客户端指定的端口，服务端通过和客户端的连接将数据转发到客户端； 客户端进程再将数据转发到本地服务，从而实现内网对外暴露服务的能力。 frp内网穿透教程 部署frp服务端（外网机器） 在frp下载界面，下载 frp，注意根据机器类型选择版本，这里因为我的客户端有人已经装了 frp_0.33.0_linux_amd64.tar.gz，所以在服务端也下载这个版本。 解压安装包：tar -zxvf frp_0.33.0_linux_amd64.tar.gz 进入解压目录：cd frp_0.33.0_linux_amd64，编辑 frps.ini文件，编辑完之后删除注释！！！ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 [common] # frp监听的端口，默认是7000，可以改成其他的 bind_port = 7000 # 授权码，请改成更复杂的 token = 12345678 # frp管理后台端口，请按自己需求更改 dashboard_port = 7500 # frp管理后台用户名和密码，请改成自己的 dashboard_user = admin dashboard_pwd = admin enable_prometheus = true # frp日志配置 log_file = /var/log/frps.</description>
    </item>
    <item>
      <title>如何向黑客有效地提问</title>
      <link>https://tanxiangyuu.github.io/posts/tech/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</link>
      <pubDate>Tue, 27 Feb 2024 20:28:33 +0800</pubDate>
      <guid>https://tanxiangyuu.github.io/posts/tech/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</guid>
      <description>原文链接
引言 尊重与期待：黑客欣赏高质量问题，对好问题持积极态度，但对不假思索或懒惰提问者有所抵触。 提问前的准备工作 自行寻找答案 搜索论坛帖子 使用搜索引擎查询 阅读手册与常见问题解答(FAQ) 自行尝试和测试 向身边专家咨询 如是程序员，阅读源代码 展示前期努力：在提问时，告知你已经尝试过的解决途径，证明你不是一个坐享其成者。 提问技巧 选择合适的提问场所：避免在不相关的论坛提问，查找并选用专门针对你问题的主题论坛或邮件列表。 利用Stack Overflow和Stack Exchange：在提问前先搜索，然后在对应主题的Stack Exchange网站上提问。 邮件列表与IRC：参加项目邮件列表，若有必要，可在开发者邮件列表提问，前提是你已经尝试过用户列表。 编写有效的标题： 标题示例：目标——差异式描述 示例：X.org 6.8.1鼠标指针在MV1005显卡芯片组下的变形问题 方便回复：不要请求直接回复到个人邮箱，而是使用恰当的论坛或邮件列表提问，并确保标题能准确反映问题内容。 清晰表述： 使用正确、清晰、准确的语言，避免拼写、语法错误。 尊重非母语使用者，但力求表达清晰，必要时声明语言障碍。 便于阅读的格式： 使用纯文本格式，避免HTML和特殊格式。 不要发送封闭格式的文档，如Word或Excel文件。 在论坛中适度使用表情符号和格式，保持专业简洁。 问题描述详尽： 描述问题的具体表现。 提供环境信息，如操作系统、应用版本等。 描述已经进行的研究与诊断步骤。 提供可能导致问题变化的背景信息。 提供重现问题的简明步骤。 精炼问题：提供简明扼要且具有针对性的信息，尽量缩小问题范围。 谨慎声称发现Bug： 在确定是Bug之前，先假设可能自身操作不当。 提供详尽的重现步骤及可能的补丁或回归测试证据。 低声下气无助于解决问题 避免以过分谦卑或模糊的方式提出问题，应清晰表述背景及问题细节，不必自我贬低。明确问题的具体症状而非主观猜测，以便他人准确判断和诊断。 提供精确的技术信息 当提问关于技术问题时，务必提供详尽的硬件配置、软件环境及错误现象等信息，如编译错误的例子所示，确保对方能看到与你相同的现象，而非仅听信个人揣测。 遵循问题发生的时间顺序 记录问题出现前的操作流程，按时间顺序详细描述，包括系统的反应和出现问题的具体环节。如有必要，提供调试日志和相关设置，确保信息具有针对性和实用性。 聚焦问题实质而非操作过程 提问时首先阐明你的最终目标，而非纠结于某一无效步骤。例如，当询问颜色选择器获取RGB值时，应说明实际需要达成的任务，以便得到更有效的解决方案。 鼓励公开交流 避免请求私下回复，提倡在公共平台讨论问题，以便更多人参与、纠正错误，并为解答者带来社区认可。只有在特殊情况下，如预期收到大量重复回复时，可提议私下整合信息后回馈至公共平台。 清晰简洁地表述需求 明确告知需要何种形式的帮助，限制所需投入的时间和精力，使专家更容易给出有针对性的回答。简化问题表述，比如求教参考资料来源优于直接要求解释概念。 提供最小化复现代码 当涉及编程问题时，附上精简且能够复现问题的代码片段，明确指出期望结果和实际结果之间的差异。创建最精简的测试用例有助于他人快速定位问题，从而提高获得有效回复的可能性。 对待家庭作业的态度 对于疑似家庭作业性质的问题，黑客社群鼓励自行解决以积累经验。可以请求提示，但不应索要完整答案。在适当场合如用户论坛中提问时，表明你已尽力但仍需指导，或许能得到有益的提示。 去除无意义提问以提升问题质量 避免使用无助于解决问题的结尾疑问句，如&amp;quot;有人能帮我吗？&amp;quot; 不明确的问题加上这类问句反而显多余，易遭黑客社区反感 尽量减少&amp;quot;是/否&amp;quot;型提问，除非期望得到确切的二元答复 慎用“紧急”标签以获取有效关注 标注“紧急”往往适得其反，可能导致问题被忽视或删除 在非专业场合高调标榜紧急可能因垃圾信息过滤而失效 特殊情况下的紧急提及须礼貌且基于共同兴趣点 礼仪助力沟通，提升获得解答的可能性 表达感谢，如使用“请”和“谢谢您的关注”，展示对他人力气的认可 礼貌虽非首要，却有益于问题得到关注，尤其在连续提问情境下 先致谢后再次感谢回复者的具体帮助，避免误解 问题解决后的跟进与分享 解决问题后及时告知并感谢参与者 使用“已解决”等标记更新原话题标题，方便他人查阅 简洁概述问题解决方法及原因，提及关键协助者 提供简洁的调试摘要或指出避免问题的途径 正确反馈问题解决状态有助于满足解答者成就感 考虑编写文档或添加FAQ，防止他人重复遇到相同问题 如何解读答案 RTFM 和 STFW：遭遇经典回应的意义与应对 当收到RTFM或STFW回复时，这意味着你应该查阅相关手册或自行上网搜索。 这类回答表明信息易于获取，自行搜索能促进学习，而非直接给予答案。 收到此类回复应视为对方已在某种程度上提供了关注，对此表示感谢。 面对困惑时的正确求解姿态 若无法理解回复，尝试自行解决，参考手册、FAQ、网络资源或请教他人。 提出疑问时展现自主探索过程，如举例询问具体的细节而非基础概念。 应对无礼回应与黑客文化 黑客圈内的直率交流可能被误认为无礼，遇此情况保持冷静。 如确实遭受冒犯，社群内其他成员可能会介入纠正不当行为。 对于真正的冒犯者，有力反击可被接受，但新手需谨慎判断，避免陷入无谓争执。 黑客文化中的某些特质可能源于独特的社交习惯，不必过分解读。 Jeff Bigler 的观点：应对策略 Jeff Bigler 关于“社交过滤器”的观察可作为理解和适应黑客社群互动方式的参考。 如何避免扮演失败者 面对批评与纠正 接受并忍受在黑客社区中因失误而受到的公开批评，这是社区标准得以维持的方式。不应期待所有意见都通过私人途径传达，避免将建设性批评视为个人攻击。 处理挑衅行为 遇到无端指责时，保持冷静，避免陷入口水战。黑客指出错误是出于关心社区和个人成长，不应为此抱怨或要求特殊对待。 学会区分口水战与实质性回复 多数口水战无需理会，确认其中是否包含对问题实质的解答或有价值的建议。 不该问的问题及其典型回应 寻找资源路径 利用搜索引擎寻找所需程序或资源，基本查询能力应当具备。 操作方法问题 提问过于宽泛，未能明确问题焦点，建议先自行研究Y问题的本质。 配置问题 自行阅读手册（RTFM），自行查找答案。 文件转换问题 自行尝试并验证可行性。 无效的程序/设置问题表述 提供具体问题详情，避免空泛陈述。 针对Windows的问题 优先考虑更换操作系统或在适当场合提问，如涉及与开源软件交互问题。 质疑系统工具有效性 确保问题归因准确，提供详细证据。 安装Linux或其他操作系统问题 寻求本地用户群组的帮助，提供具体故障细节。 非法活动请求 黑客不会支持非法行为，此类问题不会得到回答。 好问题与蠢问题的区别 展示搜索努力 聪明的问题表明提问者已经尽力搜索但仍未解决问题，寻求进一步指引。 尊重他人时间 避免责备他人或表现出傲慢态度，详细描述问题背景和已尝试的解决方案。 得不到回答时的对策 保持耐心 问题可能因多种原因暂时未得到回答，重复张贴问题非明智之举。 寻求其他援助渠道 加入用户群组或寻求商业支持，理解免费技术支持的局限性。 如何更好地回答问题 友好态度 保持礼貌和善，理解提问者可能承受的压力。 私下回复初犯者 对真诚的新手私下指导，避免公开羞辱。 不确定时明确表态 避免给出错误答案，鼓励提问者提供更多细节。 避免误导性玩笑 不要给出可能破坏提问者设置的玩笑性建议。 引导提问者细化问题 通过反问引导提问者提供更多细节，促进双方学习。 给出高质量答案 避免给出权宜之计，推荐更好的工具或重新定义问题。 正面回答并分享技巧 在回答时强调解决问题的方法，而非单纯提供结果。 推动社区进步 从问题中总结经验教训，改进文档和常见问题解答，以便未来参考。 </description>
    </item>
    <item>
      <title>Hugo命令记录</title>
      <link>https://tanxiangyuu.github.io/posts/tech/hugo%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 22 Jan 2024 00:05:03 +0800</pubDate>
      <guid>https://tanxiangyuu.github.io/posts/tech/hugo%E5%91%BD%E4%BB%A4%E8%AE%B0%E5%BD%95/</guid>
      <description>测试直接新建md文件 hugo 新建命令：hugo -F --cleanDestinationDir
1 hugo -F --cleanDestinationDir hugo 新建文档命令：hugo new dir/name.md</description>
    </item>
  </channel>
</rss>
